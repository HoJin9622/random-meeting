{"version":3,"sources":["components/Home/Banner/Banner.js","components/Home/MainBoard/Post.js","settings/url.js","settings/api.js","components/Home/MainBoard/MainBoard.js","routes/Home.js","routes/Board.js","modules/messages.js","modules/errors.js","modules/auth.js","components/Auth/Auth.js","routes/Login.js","components/NavBar/NavBar.js","routes/Mypage.js","utils.js","routes/Register.js","components/Alert/Alert.js","routes/Upload.js","components/index.js","modules/index.js","index.js"],"names":["Container","styled","div","Postbox","PostInfo","PopularIntro","Title","p","Technology","DateFont","Content","Banner","props","style","width","height","borderRadius","backgroundRepeat","src","alt","padding","Post","post","paddingBottom","display","justifyContent","alignItems","marginRight","fontSize","lineHeight","fontWeight","user","nickname","paddingTop","flexDirection","color","content","length","slice","marginBottom","status","hire_limit","city","start_time","end_time","BASE_URL","api","axios","create","baseURL","withCredentials","LastFont","GridContainer","MainBoard","params","page_size","useState","posts","setPosts","useEffect","get","then","res","data","results","console","log","catch","err","map","key","id","Home","useStyles","makeStyles","theme","root","marginTop","Board","classes","pageNumber","setPageNumber","page","maxpage","setMaxpage","count","Pagination","className","defaultPage","parseInt","boundaryCount","onChange","e","value","createMessage","msg","type","payload","initialState","returnErrors","config","headers","isAuthenticated","isLoading","Form","form","InputContainer","Input","input","Button","button","LoginLabel","span","TextLabel","Login","history","useHistory","dispatch","useDispatch","username","setUsername","password","setPassword","placeholder","currentTarget","onClick","preventDefault","body","JSON","stringify","login","replace","response","push","header","NavLabel","Link","RightContainer","DrawerIcon","BsJustify","LogoutButton","NavBar","useSelector","state","auth","to","logout","Mypage","test","Register","setNickname","notValidForm","utils","register","alertOption","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Alert","error","errors","message","messages","toast","success","newestOnTop","rtl","pauseOnFocusLoss","Upload","title","setTitle","setContent","setStart_time","setEnd_time","setCity","hireNumber","setHireNumber","statusText","alert","GlobalStyle","createGlobalStyle","reset","App","exact","path","component","persistConfig","storage","whitelist","rootReducer","combineReducers","action","persistReducer","createBrowserHistory","store","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.282223c8.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  padding-top: 2.5%;\n  font-style: normal;\n  font-weight: normal;\n`;\n\nconst Postbox = styled.div`\n  height: 30rem;\n  display: flex;\n  justify-content: space-between;\n  border-radius: 15px;\n  padding: 1% 1% 1% 1%;\n  background: #ffffff;\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n`;\n\nconst PostInfo = styled.div`\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n\nconst PopularIntro = styled.div`\n  font-size: 1.625rem;\n  line-height: 30px;\n  margin-bottom: 2.5%;\n`;\n\nconst Title = styled.p`\n  font-size: 2.125rem;\n  line-height: 40px;\n`;\n\nconst Technology = styled.p`\n  font-size: 1.125rem;\n  line-height: 20px;\n`;\n\nconst DateFont = styled.p`\n  font-size: 0.875rem;\n  line-height: 20px;\n`;\n\nconst Content = styled.div`\n  max-width: 1440px;\n  margin: auto;\n  justify-content: space-between;\n\n  @media only screen and (max-width: 1440px) {\n    padding: 0 6.875rem;\n  }\n\n  @media only screen and (max-width: 1024px) {\n    padding: 0 4.875rem;\n  }\n\n  @media only screen and (max-width: 768px) {\n    padding: 0 2.875rem;\n  }\n\n  @media only screen and (max-width: 375px) {\n    padding: 0 1rem;\n  }\n`;\n\nfunction Banner(props) {\n  return (\n    <Container>\n      <Content>\n        {/*Most popular */}\n        <PopularIntro>Intro</PopularIntro>\n        {/*박스 컨테이너*/}\n        <Postbox>\n          <img\n            style={{\n              width: \"50%\",\n              height: \"100%\",\n              borderRadius: \"20px\",\n              backgroundRepeat: \"no-repeat\",\n            }}\n            src=\"https://i.pinimg.com/originals/4a/d4/e6/4ad4e67b19d6e4c91877b317aed51f26.jpg\"\n            alt=\"\"\n          />\n          <div\n            style={{\n              width: \"45%\",\n              padding: \"2% 2% 2% 0\",\n            }}\n          >\n            <PostInfo>\n              <Title>리액트로 같이 만들사람있나요 행님들</Title>\n              <Technology>기술 : 리액트, 백엔드 : 미정</Technology>\n              <DateFont>기간 : 2020-12-23 ~ 2022-11-11</DateFont>\n            </PostInfo>\n          </div>\n        </Postbox>\n      </Content>\n    </Container>\n  );\n}\n\nexport default Banner;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\n\nconst Container = styled.div`\n  width: 345px;\n  height: 18rem;\n  background: #ffffff;\n  border-radius: 15px;\n  padding: 3%;\n`;\n\nfunction Post({ post }) {\n  return (\n    <Container>\n      <div\n        style={{\n          height: \"100%\",\n            paddingBottom: 16\n        }}\n      >\n        <div\n          style={{\n            height: \"20%\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n            }}\n          >\n            <img\n              alt=\"\"\n              src=\"https://placeimg.com/60/60/anys\"\n              style={{\n                borderRadius: \"50%\",\n                marginRight: 10,\n              }}\n            />\n            <p\n              style={{\n                fontSize: 20,\n                lineHeight: 26,\n                fontWeight: \"bold\",\n              }}\n            >\n              {post.user.nickname}\n            </p>\n          </div>\n        </div>\n\n        <div\n          style={{\n            paddingTop: 32,\n            height: \"70%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <p\n            style={{\n              fontSize: 25,\n              color: \"#706d6d\",\n            }}\n          >\n            {post.content.length > 34\n              ? post.content?.slice(0, 34) + \"...\"\n              : post.content}\n          </p>\n\n          <p\n            style={{\n              fontSize: 23,\n              marginBottom: 30,\n              fontWeight: \"500\",\n              color: \"#3881c5\",\n            }}\n          >\n            {post.status}\n          </p>\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            color: \"#706d6d\",\n          }}\n        >\n          <p>\n            모집인원 {post.hire_limit} 명 / {post.city}\n          </p>\n          <BookmarkIcon />\n        </div>\n\n          <div style={{color: \"#706d6d\", paddingTop: 4}}>\n              {post.start_time} ~ {post.end_time}\n          </div>\n      </div>\n    </Container>\n  );\n}\n\nexport default Post;\n","let url = \"http://localhost\";\n// url = \"http://52.78.44.143\";\nurl = \"http://www.side-mate.com\";\n\nif (process.env.NODE_ENV === \"production\") {\n  url = \"http://www.side-mate.com\";\n}\n\nexport const BASE_URL = url + \":8000/api/v1/\";\n","import axios from \"axios\";\nimport { BASE_URL } from \"./url\";\n\nconst api = axios.create({\n  baseURL: BASE_URL,\n  withCredentials: true,\n});\n\nexport default api;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Post from \"./Post\";\nimport api from \"../../../settings/api\";\n\nexport const Container = styled.div`\n  width: 100%;\n  padding-top: 2.5%;\n`;\n\nconst LastFont = styled.div`\n  font-size: 1.625rem;\n  line-height: 30px;\n  margin-bottom: 25px;\n`;\n\nexport const GridContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(345px, 1fr));\n  grid-gap: 1rem;\n`;\n\nexport const Content = styled.div`\n  max-width: 1440px;\n  margin: auto;\n  justify-content: space-between;\n\n  @media only screen and (max-width: 1440px) {\n    padding: 0 6.875rem;\n  }\n\n  @media only screen and (max-width: 1024px) {\n    padding: 0 4.875rem;\n  }\n\n  @media only screen and (max-width: 768px) {\n    padding: 0 2.875rem;\n  }\n\n  @media only screen and (max-width: 375px) {\n    padding: 0 1rem;\n  }\n`;\n\nfunction MainBoard() {\n  let params = { page_size: 4 };\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    api\n      .get(\"/posts/?\", { params })\n      .then((res) => {\n        setPosts(res.data.results);\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <Container>\n      <Content>\n        <LastFont>Lately Posts</LastFont>\n        <GridContainer>\n          {posts.map((post) => (\n            <Post post={post} key={post.id} />\n          ))}\n        </GridContainer>\n      </Content>\n    </Container>\n  );\n}\n\nexport default MainBoard;\n","import React from \"react\";\nimport Banner from \"../components/Home/Banner/Banner\";\nimport MainBoard from \"../components/Home/MainBoard/MainBoard\";\nfunction Home(props) {\n  return (\n    <div>\n      <Banner />\n      <MainBoard />\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport api from \"../settings/api\";\nimport Post from \"../components/Home/MainBoard/Post\";\nimport {\n  Container,\n  Content,\n  GridContainer,\n} from \"../components/Home/MainBoard/MainBoard\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 20,\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n}));\n\nfunction Board(props) {\n  const classes = useStyles();\n  const [pageNumber, setPageNumber] = useState(1);\n  let params = { page: pageNumber };\n  const [posts, setPosts] = useState([]);\n  const [maxpage, setMaxpage] = useState(1); //Pagnation 길이\n  useEffect(() => {\n    api\n      .get(\"/posts/?\", { params })\n      .then((res) => {\n        setPosts(res.data.results);\n        setMaxpage(res.data.count);\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [pageNumber]);\n\n  return (\n    <Container>\n      <Content>\n        <GridContainer>\n          {posts.map((post) => (\n            <Post post={post} key={post.id} />\n          ))}\n        </GridContainer>\n        <Pagination\n          className={classes.root}\n          count={maxpage % 20 !== 0 ? maxpage / 20 + 1 : maxpage / 20}\n          defaultPage={1}\n          page={parseInt(pageNumber)}\n          boundaryCount={2}\n          onChange={(e, value) => {\n            setPageNumber(value);\n          }}\n        />\n      </Content>\n    </Container>\n  );\n}\n\nexport default Board;\n","const CREATE_MESSAGE = \"message/CREATE_MESSAGE\";\n\n// CREATE MESSAGE\nexport const createMessage = (msg) => {\n  return {\n    type: CREATE_MESSAGE,\n    payload: msg,\n  };\n};\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case CREATE_MESSAGE:\n      return (state = action.payload);\n    default:\n      return state;\n  }\n}\n","const GET_ERRORS = \"error/GET_ERRORS\";\n\n// RETURN ERRORS\nexport const returnErrors = (msg, status) => {\n  return {\n    type: GET_ERRORS,\n    payload: { msg, status },\n  };\n};\n\nconst initialState = {\n  msg: {},\n  status: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n      };\n    default:\n      return state;\n  }\n}\n","import api from \"../settings/api\";\nimport { createMessage } from \"./messages\";\nimport { returnErrors } from \"./errors\";\nimport { history } from \"../index\";\n\nconst USER_LOADING = \"user/USER_LOADING\";\nconst USER_LOGIN = \"user/USER_LOGIN\";\nconst AUTH_ERROR = \"user/AUTH_ERROR\";\nconst LOGIN_FAIL = \"user/LOGIN_FAIL\";\nconst LOGOUT_SUCCESS = \"user/LOGOUT_SUCCESS\";\n\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n};\n\nexport const login = (username, password) => (dispatch) => {\n  const body = JSON.stringify({ username, password });\n\n  api\n    .post(\"users/sign-in/\", body, config)\n    .then((res) => {\n      dispatch({ type: USER_LOGIN, payload: res.data });\n      dispatch(createMessage({ login: \"로그인 완료\" }));\n      history.replace(\"/\");\n    })\n    .catch((err) => {\n      err.response?.data &&\n        dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({ type: LOGIN_FAIL });\n    });\n};\n\nexport const logout = () => (dispatch) => {\n  api\n    .get(\"/users/sign-out/\", null, config)\n    .then((res) => {\n      dispatch(createMessage({ logout: \"로그아웃 완료\" }));\n      dispatch({ type: LOGOUT_SUCCESS });\n      history.replace(\"/\");\n    })\n    .catch((err) => {\n      err.response?.data &&\n        dispatch(returnErrors(err.response.data, err.response.status));\n    });\n};\n\nexport const register = ({ username, password, nickname }) => (dispatch) => {\n  const body = JSON.stringify({ username, password, nickname });\n\n  api\n    .post(\"users/sign-up/\", body, config)\n    .then((res) => {\n      console.log(res);\n      dispatch(createMessage({ register: \"회원가입 완료\" }));\n      history.push(\"/login\");\n    })\n    .catch((err) => {\n      err.response?.data &&\n        dispatch(returnErrors(err.response.data, err.response.status));\n    });\n};\n\n// 초기 상태 선언\nconst initialState = {\n  isAuthenticated: null,\n  isLoading: false,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case USER_LOGIN:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload,\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  margin-top: 3rem;\n`;\n\nexport const Form = styled.form`\n  width: 100%;\n  max-width: 426px;\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const InputContainer = styled.div`\n  width: 90%;\n  margin-bottom: 24px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 100%;\n  padding: 30px;\n  border: 1px solid #8692a6;\n  border-radius: 6px;\n  font-size: 0.875rem;\n`;\n\nexport const Button = styled.button`\n  width: 90%;\n  height: 64px;\n  border: none;\n  background-color: #1565d8;\n  border-radius: 6px;\n  margin-bottom: 24px;\n  cursor: pointer;\n`;\n\nexport const LoginLabel = styled.span`\n  color: #ffffff;\n  font-size: 1rem;\n`;\n\nexport const TextLabel = styled.div`\n  color: #696f79;\n  font-size: 1rem;\n  margin-bottom: 0.875rem;\n`;\n","import React, { useState } from \"react\";\nimport { login } from \"../modules/auth\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Container,\n  Form,\n  InputContainer,\n  Input,\n  Button,\n  LoginLabel,\n  TextLabel,\n} from \"../components/Auth/Auth\";\n\nfunction Login() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    dispatch(login(username, password));\n  };\n\n  return (\n    <Container>\n      <Form>\n        <InputContainer>\n          <TextLabel>아이디</TextLabel>\n          <Input\n            type=\"text\"\n            value={username}\n            placeholder=\"아이디\"\n            onChange={(e) => setUsername(e.currentTarget.value)}\n          />\n        </InputContainer>\n        <InputContainer>\n          <TextLabel>패스워드</TextLabel>\n          <Input\n            type=\"password\"\n            value={password}\n            placeholder=\"패스워드\"\n            onChange={(e) => setPassword(e.currentTarget.value)}\n          />\n        </InputContainer>\n        <Button onClick={onSubmit}>\n          <LoginLabel>로그인</LoginLabel>\n        </Button>\n        <Button onClick={() => history.push(\"/register\")}>\n          <LoginLabel>회원가입</LoginLabel>\n        </Button>\n      </Form>\n    </Container>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { BsJustify } from \"react-icons/bs\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"../../modules/auth\";\n\nconst Container = styled.header`\n  position: sticky;\n  top: 0;\n  z-index: 1000;\n  width: 100%;\n  height: 5rem;\n  background-color: #ffffff;\n  border-bottom: 2px solid #e0e0ec;\n`;\n\nconst Content = styled.div`\n  max-width: 1440px;\n  height: 100%;\n  margin: auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media only screen and (max-width: 1440px) {\n    padding: 0 6.875rem;\n  }\n\n  @media only screen and (max-width: 1024px) {\n    padding: 0 4.875rem;\n  }\n\n  @media only screen and (max-width: 768px) {\n    padding: 0 2.875rem;\n  }\n\n  @media only screen and (max-width: 375px) {\n    padding: 0 1rem;\n  }\n`;\n\nconst NavLabel = styled(Link)`\n  font-size: 1.125rem;\n  color: #282b31;\n  line-height: 21px;\n\n  @media only screen and (max-width: 768px) {\n    font-size: 1rem;\n  }\n`;\n\nconst RightContainer = styled.div`\n  width: 40%;\n  max-width: 400px;\n  display: flex;\n  justify-content: space-between;\n\n  @media only screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst DrawerIcon = styled(BsJustify)`\n  display: none;\n  font-size: 1.5rem;\n  color: #282b31;\n  cursor: pointer;\n\n  @media only screen and (max-width: 768px) {\n    display: block;\n  }\n`;\n\nconst LogoutButton = styled.button`\n  font-size: 1.125rem;\n  color: #282b31;\n  border: none;\n  background-color: #ffffff;\n  padding: 0;\n  cursor: pointer;\n  outline: 0;\n\n  @media only screen and (max-width: 768px) {\n    font-size: 1rem;\n  }\n`;\n\nfunction NavBar() {\n  const dispatch = useDispatch();\n  const { isAuthenticated } = useSelector((state) => state.auth);\n\n  const onLogout = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <Container>\n      <Content>\n        <NavLabel to=\"/\">Side Mate</NavLabel>\n        <RightContainer>\n          <NavLabel to=\"/board\">메이트 찾기</NavLabel>\n          <NavLabel to=\"/Upload\">메이트 모집</NavLabel>\n          {isAuthenticated ? (\n            <LogoutButton onClick={onLogout}>로그아웃</LogoutButton>\n          ) : (\n            <NavLabel to=\"/login\">로그인</NavLabel>\n          )}\n        </RightContainer>\n        <DrawerIcon />\n      </Content>\n    </Container>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\n\nfunction Mypage(props) {\n  return <div>Mypage</div>;\n}\n\nexport default Mypage;\n","export default {\n  isId: (id) => {\n    const regEx = /^[a-z]+[a-z0-9]{5,19}$/g;\n    return regEx.test(id);\n  },\n  isPassword: (password) => {\n    const regEx = /(?=.*\\d{1,50})(?=.*[~`!@#$%\\^&*()-+=]{1,50})(?=.*[a-zA-Z]{2,50}).{8,50}$/;\n    return regEx.test(password);\n  },\n  isNickname: (nickname) => {\n    const regEx = /^[\\w\\Wㄱ-ㅎㅏ-ㅣ가-힣]{2,20}$/;\n    return regEx.test(nickname);\n  },\n};\n","import React, { useState } from \"react\";\nimport utils from \"../utils\";\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"../modules/auth\";\nimport { createMessage } from \"../modules/messages\";\nimport {\n  Container,\n  Form,\n  InputContainer,\n  Input,\n  Button,\n  LoginLabel,\n  TextLabel,\n} from \"../components/Auth/Auth\";\n\nfunction Register() {\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const isFormValid = () => {\n    if (username === \"\" || nickname === \"\" || password === \"\") {\n      dispatch(createMessage({ notValidForm: \"좋은말로할때 다 채워라\" }));\n      return false;\n    }\n    if (!utils.isId(username)) {\n      dispatch(\n        createMessage({\n          notValidForm:\n            \"아이디는 영문자로 시작하는 6~20자 영문자 또는 숫자이어야 합니다.\",\n        })\n      );\n      return false;\n    }\n    if (!utils.isNickname(nickname)) {\n      dispatch(\n        createMessage({\n          notValidForm: \"닉네임은 2 ~ 20 글자로 입력 해 주세요.\",\n        })\n      );\n      return false;\n    }\n    if (!utils.isPassword(password)) {\n      dispatch(\n        createMessage({\n          notValidForm:\n            \"패스워드는 숫자, 특수문자 각 1회 이상, 영문은 2개 이상 사용하여 8자리 이상으로 입력하여야 합니다.\",\n        })\n      );\n      return false;\n    }\n    return true;\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!isFormValid()) {\n      return;\n    }\n    dispatch(register({ username, nickname, password }));\n  };\n\n  return (\n    <Container>\n      <Form>\n        <InputContainer>\n          <TextLabel>아이디</TextLabel>\n          <Input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.currentTarget.value)}\n          />\n        </InputContainer>\n        <InputContainer>\n          <TextLabel>닉네임</TextLabel>\n          <Input\n            type=\"text\"\n            value={nickname}\n            onChange={(e) => setNickname(e.currentTarget.value)}\n          />\n        </InputContainer>\n        <InputContainer>\n          <TextLabel>패스워드</TextLabel>\n          <Input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.currentTarget.value)}\n          />\n        </InputContainer>\n        <Button onClick={onSubmit}>\n          <LoginLabel>회원가입</LoginLabel>\n        </Button>\n      </Form>\n    </Container>\n  );\n}\n\nexport default Register;\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst alertOption = {\n  position: \"top-center\",\n  autoClose: 3000,\n  hideProgressBar: true,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n};\n\n\nexport const Alert = () => {\n  const error = useSelector((state) => state.errors);\n  const message = useSelector((state) => state.messages);\n\n  useEffect(() => {\n    if (error.msg.msg) toast.error(error.msg.msg, alertOption);\n  }, [error]);\n\n  useEffect(() => {\n    if (message.register) toast.success(`${message.register}`, alertOption);\n    if (message.notValidForm)\n      toast.error(`${message.notValidForm}`, alertOption);\n    if (message.login) toast.success(`${message.login}`, alertOption);\n    if (message.logout) toast.success(`${message.logout}`, alertOption);\n  }, [message]);\n\n  return (\n    <ToastContainer\n      position=\"top-center\"\n      autoClose={3000}\n      hideProgressBar\n      newestOnTop={false}\n      closeOnClick\n      rtl={false}\n      pauseOnFocusLoss\n      draggable\n      pauseOnHover\n    />\n  );\n};\n","import React, { useState } from \"react\";\nimport api from \"../settings/api\";\nimport { history } from \"../index\";\n\n\nfunction Upload(props) {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [start_time, setStart_time] = useState(\"\");\n  const [end_time, setEnd_time] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [hireNumber, setHireNumber] = useState();\n\n  const params = {\n    title: title,\n    content: content,\n    hire_limit: hireNumber,\n    start_time: start_time,\n    end_time: end_time,\n    city: city,\n  };\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const onHandleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify(params);\n\n    api\n      .post(\"posts/\", body, config)\n      .then((res) => {\n        console.log(\"success\", res);\n        if(res.statusText==='Created'){alert('완료되었습니다.'); history.replace('/')}\n      })\n      .catch((err) => {\n        console.log(err.response);\n        alert(err);\n      });\n  };\n  return (\n    <div>\n      <p>제목</p>\n      <input\n        value={title}\n        onChange={(e) => {\n          setTitle(e.currentTarget.value);\n        }}\n      />\n      <p>내용</p>\n      <input\n        value={content}\n        onChange={(e) => {\n          setContent(e.currentTarget.value);\n        }}\n      />\n      <p>시작일</p>\n      <input\n        type=\"date\"\n        value={start_time}\n        onChange={(e) => {\n          setStart_time(e.currentTarget.value);\n        }}\n      />\n      <p>예상 종료일</p>\n      <input\n        type=\"date\"\n        value={end_time}\n        onChange={(e) => {\n          setEnd_time(e.currentTarget.value);\n        }}\n      />\n      <p>도시 / ex) 부산</p>\n      <input\n        value={city}\n        onChange={(e) => {\n          setCity(e.currentTarget.value);\n        }}\n      />\n      <p>모집인원</p>\n      <input\n        value={hireNumber}\n        onChange={(e) => {\n          setHireNumber(e.currentTarget.value);\n        }}\n      />\n      <button onClick={onHandleSubmit}>업로드</button>\n    </div>\n  );\n}\n\nexport default Upload;\n","import React from \"react\";\nimport \"../styles/index.css\";\nimport reset from \"styled-reset\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Home from \"../routes/Home\";\nimport Board from \"../routes/Board\";\nimport Login from \"../routes/Login\";\nimport NavBar from \"./NavBar/NavBar\";\nimport Mypage from \"../routes/Mypage\";\nimport Register from \"../routes/Register\";\nimport { Alert } from \"../components/Alert/Alert\";\nimport Upload from \"../routes/Upload\";\nconst GlobalStyle = createGlobalStyle`\n    ${reset}\n    * {\n        box-sizing: border-box;\n    }\n    body {\n        // font-family: 맨발의청춘L !important;\n        background-color: #eaedf2;\n    }\n    a {\n        text-decoration: none;\n        color: inherit;\n        cursor: pointer;\n    }\n    ol, ul, li {\n        list-style: none;\n    }\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <NavBar />\n      <Alert />\n      <Switch>\n        <Route exact path=\"/Upload\" component={Upload} />\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/board\" component={Board} />\n        <Route exact path=\"/mypage\" component={Mypage} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/register\" component={Register} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import auth from \"./auth\";\nimport errors from \"./errors\";\nimport messages from \"./messages\";\nimport { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage: storage,\n  whitelist: [\"auth\"],\n};\n\nconst rootReducer = combineReducers({\n  auth,\n  messages,\n  errors,\n});\n\nexport default persistReducer(persistConfig, rootReducer);\n","import React from \"react\";\nimport App from \"./components\";\nimport ReactDOM from \"react-dom\";\nimport persistReducer from \"./modules\";\nimport ReduxThunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { Router } from \"react-router-dom\";\nimport { persistStore } from \"redux-persist\";\nimport { createBrowserHistory } from \"history\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nexport const history = createBrowserHistory();\n\nconst store = createStore(\n  persistReducer,\n  composeWithDevTools(applyMiddleware(ReduxThunk))\n);\n\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <Provider store={store}>\n        <PersistGate persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}